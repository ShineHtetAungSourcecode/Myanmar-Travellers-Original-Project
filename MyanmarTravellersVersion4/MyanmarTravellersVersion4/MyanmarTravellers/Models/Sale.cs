//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyanmarTravellers.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class Sale
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Sale()
        {
            this.Tickets = new HashSet<Ticket>();
        }
    
        public long id { get; set; }
        public string customer_name { get; set; }
        public string nrc { get; set; }
        public string phone { get; set; }
        public decimal total { get; set; }
        public Nullable<System.DateTime> created_at { get; set; }
        public Nullable<System.DateTime> updated_at { get; set; }
        public Nullable<long> course_id { get; set; }
    
        public virtual Course Course { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Ticket> Tickets { get; set; }

        public override string ToString()
        {
            var result = "";

            result += "Name: " + customer_name + "\n";
            result += "NRC: " + nrc + "\n";
            result += "Phone: " + phone + "\n";
            result += "Date:" + Course.date.ToShortDateString() + "\n";
            result += "Bus Line: " + Course.Bus.BusLine.name + "\n";
            result += "Departure Time" + Course.departure_time + "\n";
            result += "Total Amount: " + total + "\n \n \n";
            result += "Tickets \n";
            foreach (var ticket in Tickets)
            {
                result += ticket.ToString() + "\n";
            }

            return result;
        }
    }
}